"""
Project Name: Maths Quiz
Author: Arnav Kumar
Date Created: 11/06/2025
Last Modified: 12/06/2025
Description: This is a program to help students learn and practice maths.
Language Used: Python 3.10
Files Required: None
Known Issues: None
"""

from tkinter import *
import tkinter as tk
import random
import re
from tkinter import messagebox

def create_instructions_window():
    global name_entry
    
    header_label = Label(instructions_window, text = "Maths Quiz", font = ("Times New Roman", 30))
    header_label.pack(pady = 20)

    instruction_label = Label(instructions_window, text = "Try your best to answer all the questions!", font = ("Times New Roman", 14))
    instruction_label.pack(pady = 30)

    name_label = Label(instructions_window, text = "What is your name?", font = ("Times New Roman", 14))
    name_label.pack(pady = 10)
    
    name_entry = Entry(instructions_window, justify = "center", font = ("Times New Roman", 14))
    name_entry.pack(pady = 10)
    
    start_button = Button(instructions_window, text = "Start", command = create_difficulty_window, font = ("Times New Roman", 18), width = 10, height = 1)
    start_button.pack(pady = 10)

    quit_button = Button(instructions_window, text = "Quit", command = exit_button, font = ("Times New Roman", 18), width = 10, height = 1)
    quit_button.pack(pady = 10)


def create_difficulty_window():
    difficulty_window.deiconify()
    instructions_window.withdraw()
    
    difficulty_header_label = Label(difficulty_window, text = "Difficulty", font = ("Times New Roman", 30))
    difficulty_header_label.pack(pady = 20)

    difficulty_label = Label(difficulty_window, text = "Which difficulty would you like to choose!", font = ("Times New Roman", 14))
    difficulty_label.pack(pady = 30)

    basic_button = Button(difficulty_window, text = "Basic", command = basic_questions, font = ("Times New Roman", 18), width = 10, height = 1)
    basic_button.pack(pady = 10)

    advanced_button = Button(difficulty_window, text = "Advanced", font = ("Times New Roman", 18), width = 10, height = 1)
    advanced_button.pack(pady = 10)

    expert_button = Button(difficulty_window, text = "Expert", font = ("Times New Roman", 18), width = 10, height = 1)
    expert_button.pack(pady = 10)

def create_questions_window():
    global question_label

    question_window.deiconify()
    difficulty_window.withdraw()

    questions_header_label = Label(question_window, text = "Questions", font = ("Times New Roman", 30))
    questions_header_label.pack(pady = 20)

    question_label = Label(question_window, text = "Placeholder", font = ("Times New Roman", 14))
    question_label.pack(pady = 30)

    answer_entry = Entry(question_window, font = ("Times New Roman", 14))
    answer_entry.pack(pady = 10)

    submit_button = Button(question_window, text = "Submit", font = ("Times New Roman", 18), width = 10, height = 1)
    submit_button.pack(pady = 10)

    quit_button = Button(question_window, text = "Quit", command = exit_button, font = ("Times New Roman", 18), width = 10, height = 1)
    quit_button.pack(pady = 10)

def exit_button():
    instructions_window.destroy()
    difficulty_window.destroy()
    question_window.destroy()

def name_verification():
    name = name_entry.get().title()
    
    if name.replace (" ", "").replace("-", "").isalpha():
        create_difficulty_window()
    else:
        messagebox.showinfo("Invalid Name", "‚ùå Please enter a valid name!")
        name_entry.delete(0, tk.END)
        name_entry.focus()

def basic_questions():
    create_questions_window()
    
    num1 = random.randint(1, 12)
    num2 = random.randint(1, 12)
    
    question_type = random.randint(1, 4)

    if question_type == 1:
        question_label.config(text = f"What is {num1} + {num2}?")
        
    elif question_type == 2:
        question_label.config(text = f"What is {num1} - {num2}?")
        
    elif question_type == 3:
        question_label.config(text = f"What is {num1} * {num2}?")
        
    else:
        question_label.config(text = f"What is {num1} / {num2}?")
        
instructions_window = Tk()
instructions_window.title("Instructions")
instructions_window.geometry("500x450")
instructions_window.resizable(False, False)

difficulty_window = Tk()
difficulty_window.title("Difficulty")
difficulty_window.geometry("500x400")
difficulty_window.resizable(False, False)
difficulty_window.withdraw()

question_window = Tk()
question_window.title("Questions")
question_window.geometry("500x400")
question_window.resizable(False, False)
question_window.withdraw()

create_instructions_window()
